generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  password       String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  ladderEntries  LadderEntry[]
  clanMembership ClanMember[]
}

model Clan {
  id          String    @id @default(cuid())
  name        String    @unique
  tag         String    @unique
  description String?
  createdAt   DateTime  @default(now())
  members     ClanMember[]
}

model ClanMember {
  id      String   @id @default(cuid())
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  clan    Clan     @relation(fields: [clanId], references: [id])
  clanId  String
  role    String   // z.B. leader, member
  joinedAt DateTime @default(now())

  @@unique([userId, clanId])
}

model Game {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  ladder    LadderEntry[]
}

model LadderEntry {
  id       String   @id @default(cuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  game     Game     @relation(fields: [gameId], references: [id])
  gameId   String
  elo      Int      @default(1200)
  wins     Int      @default(0)
  losses   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, gameId])
}

model MatchReport {
  id          String   @id @default(cuid())
  game        Game     @relation(fields: [gameId], references: [id])
  gameId      String
  winnerId    String
  loserId     String
  winnerElo   Int
  loserElo    Int
  createdAt   DateTime @default(now())
}
